/*
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>FinalProject</groupId>
    <artifactId>TrelloTest</artifactId>
    <version>1.0-SNAPSHOT</version>

    // http://java-online.ru/maven-pom.xhtml
    // Архітектура maven проекту
    // src: исходные файлы;
    // src/main: исходные коды проекта;
    // src/main/java: исходные java-файлы;
    // src/main/resources: ресурсные файлы, которые используются при компиляции или исполнении, например properties-файлы;
    // src/test: исходные файлы для организации тестирования;
    // src/test/java: JUnit-тест-задания для автоматического тестирования;
    // target: создаваемые в процессе работы maven'a файлы для сборки проекта.

    // Проектний файл pom.xml розташовується в корені каталога.
    // Ключовим поняттям являється артефакт (artifact) - це, по суті, будь-яка бібліотека, яка зберігається в репозиторії, до якої можна віднести залежність чи плагін

    // Maven базується на plugin-архітектурі, яка дозволяє використовувати плагіни для різних задач (test, compile, build, deploy и т.п). Іншими словами, maven запускає деякі плагіни, які виконують всю роботу.
    // Оголошення плагіну в проекті схоже на оголошення залежності. Плагіни також ідентифікуються за допомогою GAV (groupId, artifactId, version).
    // Оголошення плагіну в pom.xml дозволяє зафіксувати версію плагіна, задати йому необхідні параметри, визначити конфігураційні параметри, привязати до фаз.
    // При збірці проекту або для інших цілей (deploy, створення файлів проекту для Eclipse та інші) maven використовує плагіни (plugin).

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>6</source>
                    <target>6</target>
                </configuration>
            </plugin>
        </plugins>
    </build>


    // Maven залежності (www.mvnrepository.com)
    // Залежності (dependencies) представляють собою бібліотеки, які безпосередньо використовуються в проекті для компіляції або тестування коду.
    // Залежність - це звязок, який говорить, що для деяких фаз життєвого циклу maven проекту, потрібні деякі артефакти.
    // Оголошення залежностей заключено в секції !!!меньше dependencies больше!!!...!!!меньше/dependencies больше!!!. Кількість залежностей необмежена
    // Для кожного використаного в проекті артефакта необхідно вказати GAV (groupId, artifactId, version), де
    // groupId - ідентифікатор виробника обєкту
    // artifactId - ідентифікатор обєкту. Зазвичай, це імя модуля або додатку, який створюється
    // version - версія обєкту, який описується. Для незавершених проектів прийнято додавати суфікс SNAPSHOT.
    // scope - область дії залежності. test - залежність буде використана maven'ом при виконанні компіляції тої частини проекту, яка містить тести, а також при запуску тестів на виконання і побудову звіта з результатами тестування коду. Спроба зіслатись на будь-який клас або функцію бібліотеки junit в основній части додатку (каталог src/main) викличе помилку
    <dependencies>

        <!-- https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit -->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>2.7.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson -->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-gson</artifactId>
            <version>2.7.0</version>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.141.59</version>
        </dependency>

    </dependencies>

</project>

*/